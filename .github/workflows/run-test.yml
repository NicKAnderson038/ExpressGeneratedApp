# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
# https://github.com/github/vscode-github-actions/blob/main/.github/workflows/publish.ymlv
name: Run test with node engine defined in package.json

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  run-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Get NodeJS Version from package.json
        run: |
          echo "$(cat ./package.json)" | jq .engines.node | xargs -I {} echo "NodeVersion="{} >> $GITHUB_ENV
      - name: Use Node.js ${{ env.NodeVersion }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NodeVersion }}
          cache: 'npm'
      - run: npm ci
      - run: npm run test-run
      - name: Find package version
        uses: actions/github-script@v7
        with:
          script: |
            const version = '${{ github.event.inputs.version }}' || require('./package.json').version;
            console.log(`Version: ${version}`);
            return true;

      - name: Read node and npm versions from package.json
        uses: skjnldsv/read-package-engines-version-actions@v2
        id: package-engines-versions

      - name: Show node version number
        run: echo "Node version is ${{ steps.package-engines-versions.outputs.nodeVersion }}"

      - name: Show npm version number
        run: echo "Npm version is ${{ steps.package-engines-versions.outputs.npmVersion }}"

    # - run: npx hexo generate
    # - name: Azure Blob Storage Upload
    #   # You may pin to the exact commit or the version.
    #   # uses: bacongobbler/azure-blob-storage-upload@779a18b594a1a7cf5412645e06c856324a8b01e5
    #   uses: bacongobbler/azure-blob-storage-upload@v1.2.0
    #   with:
    #     connection_string: ${{ secrets.BLOB_CONNECTION_STRING }}
    #     container_name: $web
    #     source_dir: public
    # - name: Azure Login
    #   uses: Azure/login@v1
    #   with:
    #     creds: ${{secrets.AZURE_CREDENTIALS}}
    # - name: Azure CLI Action
    #   uses: Azure/cli@v1
    #   with:
    #     inlineScript: |
    #         az account show
    #         az login && az cdn endpoint purge -n aspnetmonsters -g aspnetmonsters --profile-name  aspnetmonsters --no-wait --content-paths '/' '/index.html'
